# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Test All

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

jobs:
  account_service:

    runs-on: ubuntu-latest
    env:
      working-directory: Services/AccountService

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{env.working-directory}}
    - name: Build
      run: dotnet build --no-restore
      working-directory: ${{env.working-directory}}
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"Code Coverage" --results-directory ./coverage
      working-directory: ${{env.working-directory}}

  device_manager_service:

    runs-on: ubuntu-latest
    env:
      working-directory: Services/Netmon.DeviceManager

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore DeviceManagerService.sln
      working-directory: ${{env.working-directory}}
    - name: Build
      run: dotnet build --no-restore DeviceManagerService.sln
      working-directory: ${{env.working-directory}}
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"Code Coverage" --results-directory ./coverage DeviceManagerService.sln 
      working-directory: ${{env.working-directory}}

  snmp_polling_service:

    runs-on: ubuntu-latest
    env:
      working-directory: Services/Netmon.SNMPPolling

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore SNMPPollingService.sln
      working-directory: ${{env.working-directory}}

    - name: Build
      run: dotnet build --no-restore SNMPPollingService.sln
      working-directory: ${{env.working-directory}}

    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults --settings runsettings.xml --logger "trx;LogFileName=test-results.trx" SNMPPollingService.sln
      working-directory: ${{env.working-directory}}

    - name: Unit Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Unit Test Report
        path: "**/test-results.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: Services/Netmon.SNMPPolling/TestResults/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Print Reports
      if: always()
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

  user_web_app:
  
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      working-directory: Services/UserWebApp
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
      working-directory: ${{env.working-directory}}
    - name: Build SvelteKit project
      run: npm run build
      working-directory: ${{env.working-directory}}
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      working-directory: ${{env.working-directory}}
    - name: Run Playwright tests
      run: npx playwright test
      working-directory: ${{env.working-directory}}

  admin_web_app:
  
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      working-directory: Services/AdminWebApp
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci
      working-directory: ${{env.working-directory}}
    - name: Build SvelteKit project
      run: npm run build
      working-directory: ${{env.working-directory}}
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      working-directory: ${{env.working-directory}}
    - name: Run Playwright tests
      run: npx playwright test
      working-directory: ${{env.working-directory}}

  snmp_test:
    runs-on: ubuntu-latest
    needs: [account_service, device_manager_service, snmp_polling_service, user_web_app, admin_web_app]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Compose Action
      uses: isbang/compose-action@v1.5.1
      with:
        compose-file: "./docker-compose.yml"
        services: |
          netmon-snmp-test-agent
          netmon-mysql

    - name: Test SNMP Details
      run: dotnet test Tests/Netmon.SNMPPolling.IntegrationTests --logger "console;verbosity=detailed"

  codeql:
    name: CodeQL
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    needs: [account_service, device_manager_service, snmp_polling_service, user_web_app, admin_web_app, snmp_test]
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
